#include "stdafx.h"
#include "VirtualCommandSetFactory.h"

/*DON'T EDIT THIS FILE! autogenerated code by XlibFactoryBuilder 1.0.2.3*/

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

BOOL CVirtualCommandSetFactory::GetAllIdentifiers(std::list<CStdString>& p_rTargets)
{
	BOOL oResult = FALSE;

	p_rTargets.clear();

	p_rTargets.push_back(VIRTUAL_DEVICE_DRIVE);
	p_rTargets.push_back(VIRTUAL_DEVICE_DRIVE2);
	p_rTargets.push_back(VIRTUAL_DEVICE_PLC);
	p_rTargets.push_back(VIRTUAL_DEVICE_PLC2);

	oResult = TRUE;

	return oResult;
}

BOOL CVirtualCommandSetFactory::CreateInstance(CStdString p_Name, CVirtualDeviceBase*& p_rpNewInstance)
{
	BOOL oResult = FALSE;

	if(p_Name.CompareNoCase(VIRTUAL_DEVICE_DRIVE) == 0)
	{
		p_rpNewInstance = new CVirtualDevice_Drive();
		oResult = TRUE;
	}
	else if(p_Name.CompareNoCase(VIRTUAL_DEVICE_DRIVE2) == 0)
	{
		p_rpNewInstance = new CVirtualDevice_Drive2();
		oResult = TRUE;
	}
	else if(p_Name.CompareNoCase(VIRTUAL_DEVICE_PLC) == 0)
	{
		p_rpNewInstance = new CVirtualDevice_Plc();
		oResult = TRUE;
	}
	else if(p_Name.CompareNoCase(VIRTUAL_DEVICE_PLC2) == 0)
	{
		p_rpNewInstance = new CVirtualDevice_Plc2();
		oResult = TRUE;
	}

	return oResult;
}
